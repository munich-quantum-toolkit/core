@ -156,8 +156,7 @@ jobs:
            -DLLVM_ENABLE_UTILS=ON `
            -DLLVM_INSTALL_UTILS=ON `
            -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}\llvm-install
          cmake --build build_llvm --target install --config Release

          cmake --build build_llvm --target install --config Release  
      # set up uv for faster Python package management
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
@ -325,29 +324,29 @@ jobs:

      # configure the project with CMake for coverage
      - name: Configure CMake for MLIR Coverage
        env:
          CMAKE_CXX_COMPILER: clang++-${{ matrix.llvm-version }}
          CMAKE_C_COMPILER: clang-${{ matrix.llvm-version }}
        run: |
          cmake -G Ninja -S . -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DBUILD_MQT_CORE_MLIR=ON \
            -DLLVM_EXTERNAL_LIT=$(which lit) \
            -DMLIR_INCLUDE_INTEGRATION_TESTS=ON \
            -DCOVERAGE=ON \
            -DMLIR_ENABLE_COVERAGE=ON \
            -DMLIR_COVERAGE_EXCLUDE="tools/quantum-opt/test/*"
            -DENABLE_COVERAGE=ON \
            -DCMAKE_C_COMPILER=$CC \
            -DCMAKE_CXX_COMPILER=$CXX

      # build the project and run the tests with coverage
      - name: Build MLIR components and run tests with coverage
        run: |
          cmake --build build --config Debug --target all
          cmake --build build --config Debug --target check-quantum-opt

      # generate coverage report
      - name: Generate Coverage Report
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          lcov --capture --directory . --output-file coverage.info
          lcov --extract coverage.info '*/mlir/*' --output-file mlir_coverage.info
          codecov --file mlir_coverage.info --flags MLIR --name "MLIR Coverage Report"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: mlir_coverage.info
          flags: MLIR
          name: MLIR Coverage Report
          fail_ci_if_error: true
          use_oidc: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) }}
          
