name: CI
on:
  push:
    branches:
      - main
  pull_request:
  merge_group:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  change-detection:
    name: 🔍 Change
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-change-detection.yml@v1.12

  cpp-tests:
    name: 🇨‌ Test
    needs: change-detection
    if: fromJSON(needs.change-detection.outputs.run-cpp-tests) && !contains(github.event.pull_request.labels.*.name, 'extensive-cpp-ci')
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-cpp-ci.yml@c++-ci-workflow-updates
    with:
      # Ubuntu matrix
      ubuntu-runners: '["ubuntu-24.04", "ubuntu-24.04-arm"]'
      ubuntu-compilers: '["gcc"]'
      ubuntu-configs: '["Release", "Debug"]'
      # macOS matrix
      macos-runners: '["macos-13", "macos-14"]'
      macos-compilers: '["clang"]'
      macos-configs: '["Release"]'
      # Windows matrix
      windows-runners: '["windows-2022", "windows-11-arm"]'
      windows-compilers: '["msvc"]'
      windows-configs: '["Release"]'
      # General settings
      cmake-args-macos: -DMQT_CORE_WITH_GMP=ON

  # run extensive C++ tests whenever this is on a PR and the PR has the `extensive-cpp-ci` label
  cpp-tests-extensive:
    name: 🇨‌ Test (Extensive)
    needs: change-detection
    if: fromJSON(needs.change-detection.outputs.run-cpp-tests) && github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'extensive-cpp-ci')
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-cpp-ci.yml@c++-ci-workflow-updates
    with:
      # Ubuntu matrix
      ubuntu-runners: '["ubuntu-24.04", "ubuntu-24.04-arm"]'
      ubuntu-compilers: '["gcc", "clang", "clang-19", "clang-20"]'
      ubuntu-configs: '["Release", "Debug"]'
      # macOS matrix
      macos-runners: '["macos-13", "macos-14", "macos-15"]'
      macos-compilers: '["clang", "gcc-14", "gcc-15", "clang-19", "clang-20"]'
      macos-configs: '["Release", "Debug"]'
      # Windows matrix
      windows-runners: '["windows-2022", "windows-2025", "windows-11-arm"]'
      windows-compilers: '["msvc", "clang"]'
      windows-configs: '["Release", "Debug"]'
      # General settings
      cmake-args-macos: -DMQT_CORE_WITH_GMP=ON

  cpp-coverage:
    name: 🇨‌ Coverage
    needs: change-detection
    if: fromJSON(needs.change-detection.outputs.run-cpp-tests)
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-cpp-coverage.yml@v1.12
    permissions:
      contents: read
      id-token: write

  cpp-linter:
    name: 🇨‌ Lint
    needs: change-detection
    if: fromJSON(needs.change-detection.outputs.run-cpp-linter)
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-cpp-linter.yml@c++-ci-workflow-updates
    with:
      cmake-args: -DBUILD_MQT_CORE_BENCHMARKS=ON -DBUILD_MQT_CORE_MLIR=ON -DBUILD_MQT_CORE_BINDINGS=ON
      clang-version: 20
      build-project: true
      files-changed-only: true
      setup-python: true
      install-pkgs: "pybind11==3.0.0"

  python-tests:
    name: 🐍 Test
    needs: change-detection
    if: fromJSON(needs.change-detection.outputs.run-python-tests)
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-python-ci.yml@c++-ci-workflow-updates
    with:
      runners: '["ubuntu-24.04", "ubuntu-24.04-arm", "macos-13", "macos-14", "windows-2022"]'
    permissions:
      contents: read
      id-token: write

  # run extensive Python tests whenever this is on a PR and the PR has the `extensive-python-ci` label
  python-tests-extensive:
    name: 🐍 Test (Extensive)
    needs: change-detection
    if: fromJSON(needs.change-detection.outputs.run-python-tests) && github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'extensive-python-ci')
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-python-ci.yml@c++-ci-workflow-updates
    with:
      runners: '["ubuntu-22.04", "ubuntu-22.04-arm", "macos-15", "windows-2025"]'
    permissions:
      contents: read
      id-token: write

  python-linter:
    name: 🐍 Lint
    needs: change-detection
    if: fromJSON(needs.change-detection.outputs.run-python-tests)
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-python-linter.yml@v1.12

  code-ql:
    name: 📝 CodeQL
    needs: change-detection
    if: fromJSON(needs.change-detection.outputs.run-code-ql)
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-code-ql.yml@v1.12

  cd:
    name: 🚀 CD
    needs: change-detection
    if: fromJSON(needs.change-detection.outputs.run-cd)
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-python-packaging.yml@c++-ci-workflow-updates
    with:
      runners: '["ubuntu-24.04", "ubuntu-24.04-arm", "macos-13", "macos-14", "windows-2022", "windows-11-arm"]'

  required-checks-pass: # This job does nothing and is only used for branch protection
    name: 🚦 Check
    if: always()
    needs:
      - change-detection
      - cpp-tests
      - cpp-tests-extensive
      - cpp-coverage
      - cpp-linter
      - python-tests
      - python-tests-extensive
      - python-linter
      - code-ql
      - cd
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: >-
            ${{
              fromJSON(needs.change-detection.outputs.run-cpp-tests) && !contains(github.event.pull_request.labels.*.name, 'extensive-cpp-ci')
              && '' || 'cpp-tests,'
            }}
            ${{
              fromJSON(needs.change-detection.outputs.run-cpp-tests) && github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'extensive-cpp-ci')
              && '' || 'cpp-tests-extensive,'
            }}
            ${{
              fromJSON(needs.change-detection.outputs.run-cpp-tests)
              && '' || 'cpp-coverage,'
            }}
            ${{
              fromJSON(needs.change-detection.outputs.run-cpp-linter)
              && '' || 'cpp-linter,'
            }}
            ${{
              fromJSON(needs.change-detection.outputs.run-python-tests)
              && '' || 'python-tests,'
            }}
            ${{
              fromJSON(needs.change-detection.outputs.run-python-tests) && github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'extensive-python-ci')
              && '' || 'python-tests-extensive,'
            }}
            ${{
              fromJSON(needs.change-detection.outputs.run-python-tests)
              && '' || 'python-linter,'
            }}
            ${{
              fromJSON(needs.change-detection.outputs.run-code-ql)
              && '' || 'code-ql,'
            }}
            ${{
              fromJSON(needs.change-detection.outputs.run-cd)
              && '' || 'cd,'
            }}
          jobs: ${{ toJSON(needs) }}
