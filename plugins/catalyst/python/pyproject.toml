# Copyright (c) 2023 - 2025 Chair for Design Automation, TUM
# Copyright (c) 2025 Munich Quantum Software Company GmbH
# All rights reserved.
#
# SPDX-License-Identifier: MIT
#
# Licensed under the MIT License

[build-system]
requires = [
  "scikit-build-core>=0.11.1",
  "mqt-core~=3.0.0",
  "pennylane @ https://test-files.pythonhosted.org/packages/a4/ae/b8b0fdcd91fe0e87d699d46938cfee0531e8093042dd9eff11abc247c02f/pennylane-0.42.0.dev27-py3-none-any.whl",
  "pennylane-lightning @ https://test-files.pythonhosted.org/packages/4d/99/1cab1348e3b839f0c8df515dc6b2d347c5e913361ff65e6fa1f197c0a67a/pennylane_lightning-0.42.0.dev16-cp312-cp312-macosx_13_0_arm64.whl",
  "pennylane-lightning-kokkos @ https://test-files.pythonhosted.org/packages/25/97/9707f73d2ed6e2549e4e099d0083481c144e984227e147b44cd2838535e6/pennylane_lightning_kokkos-0.42.0.dev16-cp312-cp312-macosx_13_0_arm64.whl",
  "pennylane-catalyst @ https://test-files.pythonhosted.org/packages/00/1f/791910226d7363ba8272add71529c637426d1ac225a4e582ef8612b7ecee/pennylane_catalyst-0.12.0.dev37-cp312-abi3-macosx_13_0_arm64.whl",
]
build-backend = "scikit_build_core.build"

[project]
name = "mqt-catalyst_plugin"
version = "0.1.0"
description = "The Munich Quantum Toolkit's Catalyst Plugin"
readme = "../../../README.md"
authors = [
    { name = "Patrick Hopf", email = "patrick.hopf@tum.de" },
    { name = "Yannick Stade", email = "yannick.stade@tum.de" },
    { name = "Lukas Burgholzer", email = "burgholzer@me.com" }
]
keywords = ["MQT", "quantum-computing", "design-automation", "catalyst", "MLIR", "plugin"]
license = "MIT"

classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Operating System :: MacOS",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: C++",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
  "Typing :: Typed",
]
requires-python = ">=3.10"

[project.entry-points."catalyst.passes_resolution"]
"mqt.passes" = "mqt.catalyst"

[project.scripts]
mqt-catalyst-cli = "mqt.catalyst.__main__:main"

[project.urls]
Homepage = "https://github.com/munich-quantum-toolkit/core"
Changelog = "https://github.com/munich-quantum-toolkit/core/blob/main/CHANGELOG.md"
Documentation = "https://mqt.readthedocs.io/projects/core"
Issues = "https://github.com/munich-quantum-toolkit/core/issues"
Discussions = "https://github.com/munich-quantum-toolkit/core/discussions"
PyPI = "https://pypi.org/project/mqt-core/"


[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "build-system.requires"

# Set the wheel install directory
wheel.install-dir = "mqt/catalyst_plugin"

# Explicitly set the package directory
wheel.packages = ["src/mqt"]

# Set required Ninja version
ninja.version = ">=1.10"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}/{build_type}"

# All components to install
install.components = [
  "mqt-catalyst_Plugin",
]

sdist.include = ["src/mqt/catalyst/_version.py"]
sdist.exclude = [
  "**/docs",
  "**/test",
]

[tool.check-sdist]
git-only = [
  "docs/*",
  "test/*",
]

[tool.scikit-build.cmake]
source-dir = "../../.."

[tool.scikit-build.cmake.define]
BUILD_MQT_CORE_TESTS = "OFF"
BUILD_MQT_CORE_SHARED_LIBS = "ON"
BUILD_MQT_CORE_MLIR = "ON"
BUILD_MQT_CORE_CATALYST_PLUGIN = "ON"

[tool.check-wheel-contents]
ignore = [
  "W002", # Wheel contains duplicate files (.so symlinks)
  "W004", # Module is not located at importable path (/lib/mqt-core-*.so)
]

[tool.pytest.ini_options]
minversion = "7.2"
addopts = ["-ra", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  'error',
  'ignore:\s.*Pyarrow.*:DeprecationWarning:',
  'ignore:.*datetime\.datetime\.utcfromtimestamp.*:DeprecationWarning:',
  'ignore:.*jax\.interpreters\.mlir.*:DeprecationWarning:',
  'ignore:.*The jaxlib\\.hlo_helpers submodule is deprecated.*:DeprecationWarning'
]
log_cli_level = "INFO"
testpaths = ["test"]

[tool.coverage]
run.source = ["mqt.catalyst_plugin"]
run.omit = []
report.exclude_also = [
  '\.\.\.',
  'if TYPE_CHECKING:',
  'raise AssertionError',
  'raise NotImplementedError',
  'def __dir__()',  # Ignore __dir__ method that exists mainly for better IDE support
  '@overload'  # Overloads are only for static typing
]

[tool.mypy]
files = ["src", "test"]
mypy_path = ["$MYPY_CONFIG_FILE_DIR/src"]
python_version = "3.10"
warn_unused_configs = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
strict = true
disallow_untyped_defs = false
explicit_package_bases = true
warn_unreachable = true

# todo: can the module be used from mqt-core?
typing-modules = ["mqt.core._compat.typing"]
isort.required-imports = ["from __future__ import annotations"]

[tool.typos]
default.extend-ignore-re = [
  "(?Rm)^.*(#|//)\\s*spellchecker:disable-line$",  # ignore line
  "(?s)(#|//)\\s*spellchecker:off.*?\\n\\s*(#|//)\\s*spellchecker:on" # ignore block
]

[tool.typos.default.extend-words]
wille = "wille"
anc = "anc"
mch = "mch"
ket = "ket"

[tool.repo-review]
ignore = ["GH200"]

[tool.cibuildwheel]
build = "cp3*"
skip = "*-manylinux* *-linux* *-musllinux*"
archs = "auto64"
test-groups = ["test"]
test-command = "pytest {project}/test"
build-frontend = "build[uv]"

[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET = "10.15" }

[[tool.cibuildwheel.overrides]]
select = "*-macosx_arm64"
environment = { MACOSX_DEPLOYMENT_TARGET = "11.0" }

[tool.uv]
required-version = ">=0.5.20"
reinstall-package = ["mqt-catalyst-plugin"]

[tool.uv.sources]
mqt-catalyst-plugin = { workspace = true }

[dependency-groups]
build = [
  "pybind11>=2.13.6",
  "scikit-build-core>=0.11.1",
  "setuptools-scm>=8.2",
  "mqt-core>=3.0.0",
  "pennylane @ https://test-files.pythonhosted.org/packages/a4/ae/b8b0fdcd91fe0e87d699d46938cfee0531e8093042dd9eff11abc247c02f/pennylane-0.42.0.dev27-py3-none-any.whl",
  "pennylane-lightning @ https://test-files.pythonhosted.org/packages/4d/99/1cab1348e3b839f0c8df515dc6b2d347c5e913361ff65e6fa1f197c0a67a/pennylane_lightning-0.42.0.dev16-cp312-cp312-macosx_13_0_arm64.whl",
  "pennylane-lightning-kokkos @ https://test-files.pythonhosted.org/packages/25/97/9707f73d2ed6e2549e4e099d0083481c144e984227e147b44cd2838535e6/pennylane_lightning_kokkos-0.42.0.dev16-cp312-cp312-macosx_13_0_arm64.whl",
  "pennylane-catalyst @ https://test-files.pythonhosted.org/packages/00/1f/791910226d7363ba8272add71529c637426d1ac225a4e582ef8612b7ecee/pennylane_catalyst-0.12.0.dev37-cp312-abi3-macosx_13_0_arm64.whl",
]
test = [
  "pytest>=8.3.5",
  "pytest-cov>=6.1.1"
]
dev = [
  {include-group = "build"},
  {include-group = "test"},
]
