# Copyright (c) 2023 - 2025 Chair for Design Automation, TUM
# Copyright (c) 2025 Munich Quantum Software Company GmbH
# All rights reserved.
#
# SPDX-License-Identifier: MIT
#
# Licensed under the MIT License

[build-system]
requires = [
  "scikit-build-core>=0.11.5",
  "pennylane-catalyst>=0.12.0.dev70",
  # The following dependencies can be removed once we no longer rely on the pre-release version for Catalyst
  "pennylane>=0.42.0.dev48",
  "pennylane-lightning>=0.42.0.dev16",
  "pennylane-lightning-kokkos>=0.42.0.dev16",
]
build-backend = "scikit_build_core.build"

[project]
name = "mqt-catalyst-plugin"
version = "0.1.0"
description = "The Munich Quantum Toolkit's Catalyst MLIR Plugin"
readme = "README.md"
authors = [
    { name = "Patrick Hopf", email = "patrick.hopf@tum.de" },
    { name = "Yannick Stade", email = "yannick.stade@tum.de" },
    { name = "Lukas Burgholzer", email = "burgholzer@me.com" }
]
keywords = ["MQT", "quantum-computing", "design-automation", "catalyst", "MLIR", "plugin"]
license = "MIT"

classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Operating System :: MacOS",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: C++",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
  "Typing :: Typed",
]
requires-python = ">=3.10"

[dependency-groups]
build = [
  "scikit-build-core>=0.11.5",
  {include-group = "catalyst"},
]
test = [
  "lit>=18.1.8",
  "pytest>=8.3.5",
  "pytest-cov>=6.1.1",
]
catalyst = [
  "pennylane-catalyst>=0.12.0.dev70",
  # The following dependencies can be removed once we no longer rely on the pre-release version for Catalyst
  "pennylane>=0.42.0.dev48",
  "pennylane-lightning>=0.42.0.dev16",
  "pennylane-lightning-kokkos>=0.42.0.dev16",
]
dev = [
  {include-group = "build"},
  {include-group = "test"},
]

[project.entry-points."catalyst.passes_resolution"]
"mqt.passes" = "mqt.core.plugins.catalyst"

[project.urls]
Homepage = "https://github.com/munich-quantum-toolkit/core"
Changelog = "https://github.com/munich-quantum-toolkit/core/blob/main/CHANGELOG.md"
Documentation = "https://mqt.readthedocs.io/projects/core"
Issues = "https://github.com/munich-quantum-toolkit/core/issues"
Discussions = "https://github.com/munich-quantum-toolkit/core/discussions"
PyPI = "https://pypi.org/project/mqt-core/"


[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "build-system.requires"

# Set the wheel install directory
wheel.install-dir = "mqt/core/plugins/catalyst"

# Explicitly set the package directory
wheel.packages = ["python/mqt"]

# Set required Ninja version
ninja.version = ">=1.10"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}/{build_type}"

# All components to install
install.components = [
  "mqt-catalyst_Plugin",
]

# We are not building a CPython extension, so the produced wheel will work with any Python version
wheel.py-api = "py3"

sdist.exclude = [
  "**/test",
]

[tool.check-sdist]
git-only = [
  "test/*",
]

[tool.scikit-build.cmake]
source-dir = "../.."

[tool.scikit-build.cmake.define]
BUILD_MQT_CORE_TESTS = "OFF"
BUILD_MQT_CORE_SHARED_LIBS = "ON"
BUILD_MQT_CORE_MLIR = "ON"
BUILD_MQT_CORE_CATALYST_PLUGIN = "ON"

[tool.check-wheel-contents]
ignore = [
  "W002", # Wheel contains duplicate files (.so symlinks)
  "W004", # Module is not located at importable path (/lib/mqt-core-*.so)
]

[tool.pytest.ini_options]
minversion = "7.2"
addopts = ["-ra", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  'error',
  'ignore:\s.*Pyarrow.*:DeprecationWarning:',
  'ignore:.*datetime\.datetime\.utcfromtimestamp.*:DeprecationWarning:',
  'ignore:.*jax\.interpreters\.mlir.*:DeprecationWarning:',
  'ignore:.*The jaxlib\\.hlo_helpers submodule is deprecated.*:DeprecationWarning',
  'ignore:.*:DeprecationWarning:gast.*',
]
log_cli_level = "INFO"
testpaths = ["test/python"]

[tool.coverage]
run.source = ["mqt.catalyst_plugin"]
run.omit = []
report.exclude_also = [
  '\.\.\.',
  'if TYPE_CHECKING:',
  'raise AssertionError',
  'raise NotImplementedError',
  'def __dir__()',  # Ignore __dir__ method that exists mainly for better IDE support
  '@overload'  # Overloads are only for static typing
]

[tool.mypy]
files = ["python", "test"]
mypy_path = ["$MYPY_CONFIG_FILE_DIR/python"]
python_version = "3.10"
warn_unused_configs = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
strict = true
disallow_untyped_defs = false
explicit_package_bases = true
warn_unreachable = true
isort.required-imports = ["from __future__ import annotations"]

[tool.typos]
default.extend-ignore-re = [
  "(?Rm)^.*(#|//)\\s*spellchecker:disable-line$",  # ignore line
  "(?s)(#|//)\\s*spellchecker:off.*?\\n\\s*(#|//)\\s*spellchecker:on" # ignore block
]

[tool.typos.default.extend-words]
wille = "wille"
anc = "anc"
mch = "mch"
ket = "ket"

[tool.repo-review]
ignore = ["GH200"]

[tool.cibuildwheel]
build = "cp3*"
skip = "*-musllinux_* *-win_*"
archs = "auto64"
test-groups = ["test"]
test-command = "pytest {project}/test/python"
build-frontend = "build[uv]"

[tool.cibuildwheel.linux]
environment = { DEPLOY = "ON" }

[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET = "10.15" }

[[tool.cibuildwheel.overrides]]
select = "*-macosx_arm64"
environment = { MACOSX_DEPLOYMENT_TARGET = "11.0" }


[tool.uv]
prerelease = "allow"

# Only resolve on Linux and macOS
environments = [
  "sys_platform == 'darwin'",
  "sys_platform == 'linux'",
]

[[tool.uv.index]]
name = "test.pypi.org"
url = "https://test.pypi.org/simple"
explicit = true


[tool.uv.sources]
pennylane-catalyst = { index = "test.pypi.org" }
pennylane-lightning = { index = "test.pypi.org" }
pennylane-lightning-kokkos = { index = "test.pypi.org" }
pennylane = { index = "test.pypi.org" }

[tool.ruff]
line-length = 120
namespace-packages = ["mqt"]
preview = true
unsafe-fixes = true
src = ["python"]
exclude = [
  "plugins/catalyst",
]


[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "C90",     # <...> too complex
  "COM812",  # Conflicts with formatter
  "CPY001",  # Missing copyright notice at top of file
  "ISC001",  # Conflicts with formatter
  "PLR09",   # Too many <...>
  "PLR2004", # Magic value used in comparison
  "PLC0415", # Import should be at top of file
  "S101",    # Use of assert detected
  "S404",    # `subprocess` module is possibly insecure
  "TID252"   # Prefer absolute imports over relative imports from parent modules
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"test/python/**" = ["T20", "INP001"]
